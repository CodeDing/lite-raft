#!/bin/dash

#Copyright (c) 2014 Luigi Tarenga <luigi.tarenga@gmail.com>
#Distributed under the terms of a MIT license.

export sshopt="-o ConnectTimeout=1 -o ServerAliveInterval=2 \
-o ServerAliveCountMax=3 -o StrictHostKeyChecking=no \
-o ControlMaster=auto -o ControlPath=~/.ssh/master-%r@%h:%p"
cd $(dirname $0)

read server_role      < temp/server_role
read hostname         < temp/hostname
read current_leader   < temp/current_leader
read client_timeout   < conf/client_timeout
read cluster_nodes    < conf/cluster_nodes

if ! flock -e -w 0 temp/master_lock true ; then
   if [ "$server_role" = "leader" ] ; then
      case "$1" in
      if|set|unset|noop)
         flock -e temp/activity_lock internals/client "$@"
      ;;
      get)
         flock -s temp/activity_lock internals/client get "$2"
      ;;
      status)
         echo Leader: $hostname
         for h in $cluster_nodes ; do
            [ "$h" = "$hostname" ] && continue
            read follower_timeout < temp/${h}_follower_timeout
            if [ "$follower_timeout" -gt 0 ] ; then
               echo Follower: $h
            else
               echo Unknown: $h
            fi
         done
      ;;
      add-member)
         read cluster_nodes < conf/cluster_nodes
         cluster_nodes_new="$cluster_nodes $2"
         flock -e temp/activity_lock internals/client conf_old_new "$cluster_nodes_new"
         flock -e temp/activity_lock internals/client conf_new
      ;;
      esac

   elif [ -n "$current_leader" ] ; then
      ssh $sshopt "$current_leader" $PWD/$0 "$@"
   else
      echo leader is not yet ready
      exit 1
   fi
else
   #no process running here, return error
   echo no server running on $hostname. cannot process request.
   exit 1
fi
