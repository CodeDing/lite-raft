#!/bin/dash

#Copyright (c) 2014 Luigi Tarenga <luigi.tarenga@gmail.com>
#Distributed under the terms of a MIT license.

export sshopt="-q -o ConnectTimeout=1 -o StrictHostKeyChecking=no"

cd $(dirname $0)
mkdir -p /dev/shm/lite-raft/temp

{
   flock -e 9
    
   echo ""       > temp/current_leader
   echo follower > temp/server_role
   echo 0        > temp/commit_index
   echo false    > temp/quorum_heartbeat
   cp conf/election_timeout temp/election_timeout
   
   if [ -f state-machine-snapshot/cur/last_included_index ] ; then
      cp state-machine-snapshot/cur/last_included_index temp/last_log_applied
   else
      echo 0 > temp/last_log_applied
   fi

   hostname -s > temp/hostname
   read hostname < temp/hostname
   read cluster_nodes < conf/cluster_nodes
   read snapshot_period < conf/snapshot_period

   echo $(date) starting as follower.
   while true ; do
      read server_role < temp/server_role
      sleep 1 &
      case "$server_role" in 
       follower)
         flock -e -w 1 temp/activity_lock internals/follower
       ;;
       candidate)
         #usleep between 0 and 1020000 microseconds
         usleep $(($(od -An -N1 -d /dev/urandom)*4000))
         flock -e -w 1 temp/activity_lock internals/candidate
       ;;
       leader)
         flock -e -w 1 temp/activity_lock internals/leader
       ;;
      esac

      first_log_index=0
      if [ -f state-machine-snapshot/cur/last_included_index ] ; then
         read first_log_index < state-machine-snapshot/cur/last_included_index
      fi
      read last_log_index < state/last_log_index
      if [ $(($last_log_index-$first_log_index)) -gt $snapshot_period ] ; then
         flock -e -w 1 temp/activity_lock internals/create-snapshot
      fi

      wait
   done
   
} 9> temp/master_lock
