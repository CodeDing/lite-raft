#!/bin/dash

#Copyright (c) 2014 Luigi Tarenga <luigi.tarenga@gmail.com>
#Distributed under the terms of a MIT license.

cd $(dirname $0)

case "$1" in
 first-boot)
   if [ -f temp/master_lock ] ; then
      if ! flock -e -w 0 temp/master_lock true ; then
         echo temp/master_lock is locked. cannot initialize state-machine.
         exit 1
      fi
   fi
   echo first-boot
   rm -rf   state state-machine-log   state-machine-data state-machine-snapshot /dev/shm/lite-raft/temp
   mkdir -p state state-machine-log/0 state-machine-data state-machine-snapshot /dev/shm/lite-raft/temp
   touch state-machine-log/0/0
   echo 0  > state/current_term
   echo 0  > state/last_log_index
   echo "" > state/voted_for
   ./lite-raft-server > message-log/lite-raft-server.log &
 ;;

 start)
   if [ -f temp/master_lock ] ; then
      if ! flock -e -w 0 temp/master_lock true ; then
         echo temp/master_lock is locked. server already started.
         exit 1
      fi
   fi
   echo start
   ./lite-raft-server > message-log/lite-raft-server.log &
 ;;

 stop)
   echo stop
   shell_cmd=$(head -1 lite-raft-server)
   shell_cmd=${shell_cmd#\#!}
   pkill -x -f "$shell_cmd ./lite-raft-server"
   fuser -s -k -TERM ~/.ssh/lite-raft-socket-* 2>/dev/null
 ;;

 *)
   echo "Usage: ${0##*/} { first-boot | start | stop }"
   echo "  Main script to start and stop lite-raft service or initialize"
   echo "  lite-raft state machine data and logs."
   echo "      start   start lite-raft-server. preserve data and log"
   echo "       stop   stop lite-raft-server and child processes."
   echo " first-boot   cancel information in the local state machine data and"
   echo "              logs and start lite-raft-server. Execute this command"
   echo "              on every node where you want to cancel every data."
 ;;
esac
